buildscript {
	ext {
		springBootVersion = '2.1.0.BUILD-SNAPSHOT'
		aptVersion = '0.15'
	}
	repositories {
		jcenter()
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("net.ltgt.gradle:gradle-apt-plugin:${aptVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt'
apply plugin: 'jacoco'

group = 'media'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_10

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/" }
}

task wrapper(type: Wrapper) {
    gradleVersion = "${gradleVersion}"
}

ext {
	springCloudVersion = 'Finchley.BUILD-SNAPSHOT'
    mapStructVersion = '1.2.0.Final'
    gradleVersion = '4,8'
    jacocoVersion = '0.8.1'
	minioVersion = '4.0.1'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile("io.minio:minio:${minioVersion}")
	compile('org.freemarker:freemarker')
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.projectlombok:lombok')
    compile("org.mapstruct:mapstruct-jdk8:${mapStructVersion}")
    apt("org.mapstruct:mapstruct-processor:${mapStructVersion}")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
	testCompile('org.springframework.cloud:spring-cloud-stream-test-support')
	testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		xml.destination "${buildDir}/reports/jacoco/report.xml"
		html.enabled false
		csv.enabled false
	}
}

jacoco {
    toolVersion = "${jacocoVersion}"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

tasks.withType(JavaCompile) {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true'
    ]
}

check.dependsOn jacocoTestReport
